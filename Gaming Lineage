
local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/AikaV3rm/UiLib/master/Lib.lua')))()

local w = library:CreateWindow("Tidal Hub") -- Creates the window

--local b = w:CreateFolder("Auto-Pickup") -- Creates the folder(U will put here your buttons,etc)
local c = w:CreateFolder('Collector')
local d = w:CreateFolder('ESP')
local e = w:CreateFolder('Hacks')
local z = w:CreateFolder("Settings")

getgenv().AutoTrinket = false
getgenv().AutoArtifact = false
getgenv().CollectorNotifier = false

getgenv().RaceESP = false
getgenv().ClassESP = false
getgenv().HealthESP = false
getgenv().PlayerESP = false

getgenv().FlyTog = false
getgenv().SpeedTog = false


--[[b:Label("Auto-Pickup",{
    TextSize = 25; -- Self Explaining
    TextColor = Color3.fromRGB(255,255,255); -- Self Explaining
    BgColor = Color3.fromRGB(69,69,69); -- Self Explaining
    
}) 

z:Label("Settings",{
    TextSize = 25; -- Self Explaining
    TextColor = Color3.fromRGB(255,255,255); -- Self Explaining
    BgColor = Color3.fromRGB(69,69,69); -- Self Explaining
    
}) ]]

z:DestroyGui()

--[[b:Button("Button",function()
    print("Elym Winning")
end)]]

--[[b:Toggle("Automatic Trinket Pickup",function(bool)
    getgenv().AutoTrinket = bool
    print(shared.toggle)
end)

b:Toggle("Automatic Artifact Pickup",function(bool)
    getgenv().AutoArtifact = bool
    print(shared.toggle)
end)]]

d:Toggle("Toggle ESP",function(bool)
    getgenv().PlayerESP = bool
    print(shared.toggle)
end)

d:Toggle("Show Race",function(bool)
    getgenv().RaceESP = bool
    print(shared.toggle)
end)

d:Toggle("Show Class",function(bool)
    getgenv().ClassESP = bool
    print(shared.toggle)
end)

d:Toggle("Show Health",function(bool)
    getgenv().HealthESP = bool
    print(shared.toggle)
end)

e:Toggle("Toggle Fly",function(bool)
    getgenv().FlyTog = bool
    print(shared.toggle)
end)

e:Slider("Flyspeed",{
    min = 10; -- min value of the slider
    max = 200; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    print(value)
end)

e:Toggle("Toggle Speed",function(bool)
    getgenv().SpeedTog = bool
    print(shared.toggle)
end)

e:Slider("walkspeed",{
    min = 10; -- min value of the slider
    max = 200; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    print(value)
end)

--[[b:Slider("Slider",{
    min = 10; -- min value of the slider
    max = 50; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    print(value)
end)]]

--[[b:Dropdown("Dropdown",{"A","B","C"},true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t
    print(mob)
end)]]

--[[b:Bind("Bind",Enum.KeyCode.C,function() --Default bind
    print("Yes")
end)]]

--[[b:ColorPicker("ColorPicker",Color3.fromRGB(255,0,0),function(color) --Default color
    print(color)
end)]]

--[[b:Box("Box","number",function(value) -- "number" or "string"
    print(value)
end)]]



--[[
How to refresh a dropdown:
1)Create the dropdown and save it in a variable
local yourvariable = b:Dropdown("Hi",yourtable,function(a)
    print(a)
end)
2)Refresh it using the function
yourvariable:Refresh(yourtable)
How to refresh a label:
1)Create your label and save it in a variable
local yourvariable = b:Label("Pretty Useless NGL",{
    TextSize = 25; -- Self Explaining
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
2)Refresh it using the function
yourvariable:Refresh("Hello") It will only change the text ofc
]]
